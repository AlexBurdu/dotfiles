// Place your key bindings in this file to overwrite the defaults
[
    // NAVIGATION
    // Splits & Panes
    {
        "key": "ctrl+j",
        "command": "workbench.action.focusBelowGroup"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.focusAboveGroup"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.focusRightGroup"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.focusLeftGroup"
    },
    // Editor
    {
        "key": "ctrl+f4",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "alt+e",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "!focusPanel"
    },
    {
        "key": "ctrl+n",
        "command": "workbench.action.files.newUntitledFile",
        "when": "!explorerViewletFocus"
    },
    {
        "key": "ctrl+shift+n",
        "command": "explorer.newFolder",
        "when": "explorerViewletFocus"
    },
    {
        "key": "ctrl+t",
        "command": "breadcrumbs.focusAndSelect",
        "when": "breadcrumbsPossible && breadcrumbsVisible"
    },
    // Terminal
    {
        "key": "alt+t",
        "command": "workbench.action.terminal.focus",
        "when": "!terminalFocus"
    },
    {
        "key": "alt+t",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+n",
        "command": "workbench.action.terminal.new",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+z",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+x",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+w",
        "command": "workbench.action.terminal.kill",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+s",
        "command": "workbench.action.terminal.splitActiveTab",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+j",
        "command": "workbench.action.togglePanel"
    },
    // Side Bar
    // File Tree
    {
        "key": "alt+f",
        "command": "workbench.explorer.fileView.focus"
    },
    {
        "key": "alt+f",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "explorerViewletFocus"
    },
    {
        "key": "ctrl+n",
        "command": "explorer.newFile",
        "when": "explorerViewletFocus"
    },
    // Source Control
    {
        "key": "alt+v",
        "command": "workbench.scm.focus"
    },
    {
        "key": "alt+v",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "sideBarVisible"
    },
    {
        "key": "ctrl+shift+n",
        "command": "workbench.action.newWindow",
        "when": "!explorerViewletFocus"
    },
    {
        "key": "shift+space",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+space",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+b",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "f12",
        "command": "-editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    // Inline Suggestions
    {
        "key": "alt+.",
        "command": "editor.action.inlineSuggest.showNext",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+,",
        "command": "editor.action.inlineSuggest.showPrevious",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+/",
        "command": "editor.action.inlineSuggest.acceptNextWord",
        "when": "editorTextFocus && !editorReadonly"
    },
    // Copilot
    {
        "key": "alt+x alt+c",
        "command": "workbench.panel.chat.view.copilot.focus"
    },
    {
        "key": "alt+x alt+c",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "sideBarVisible"
    },
    // Misc
    {
        "key": "ctrl+shift+a",
        "command": "-editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+a",
        "command": "-notification.acceptPrimaryAction",
        "when": "notificationFocus || notificationToastsVisible"
    }
]